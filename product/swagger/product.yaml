openapi: 3.0.3
info:
  title: API de produtos
  version: 0.0.1
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html
externalDocs:
  description: Documentação burocrática
  url: https://mockapi.io
servers:
- url: https://63d2ba2c1780fd6ab9cbb875.mockapi.io/
  description: API de produtos
paths:
  /api/categories:
    get:
      summary: Lista todas as categorias
      responses: 
        200:
          description: Sucesso, retorna todas as categorias
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categories"
        404:
          description: Sem categorias cadastradas
  /api/categories/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    get:
      summary: Encontra a categoria
      responses: 
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categorie"
        401:
          description: Usuário não autorizado
        404:
          description: Categoria não encontrada
          
  /api/admin/categories/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    post:
      security:
      - auth: []
      summary: Cria nova categoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categorie"
      responses:
        201:
          description: Categoria cadastrada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categorie"
        401:
          description: Usuário não autorizado
        404:
          description: API não encontrada
    put:
      security:
      - auth: []
      summary: Atualiza a categoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categorie"
      responses:
        201:
          description: Categoria atualizada
        401:
          description: Usuário não autorizado
        404:
          description: Categoria não encontrada
    delete:
      security:
      - auth: []
      summary: Deleta a categoria
      responses:
        200:
          description: Categoria deletada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categorie"
        401:
          description: Usuário não autorizado
        404:
          description: Categoria não encontrada
    patch:
      security:
      - auth: []
      summary: Atualiza a categoria com o PATCH
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        204:
          description: Categoria atualizada
        401:
          description: Usuário não autorizado
        404:
          description: Categoria não encontrada









  /api/admin/products:
    post:  
      security:
      - auth: []
      summary: Cria um novo produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        201:
          description: Produto cadastrado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        401:
          description: Usuário não autorizado
        404:
          description: API não encontrada
  /api/products:
    get:
      summary: Lista todas os produtos
      responses: 
        200:
          description: Sucesso, retorna todas os produtos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: Sem produtos cadastrados
  /api/products/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    get:
      summary: Encontra o produto
      responses:
        200:
          description: Produto econtrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        401:
          description: Usuário não autorizado
        404:
          description: Produto não encontrado
  /api/admin/products/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    put:
      security:
      - auth: []
      summary: Atualiza o produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        201:
          description: Produ.to atualizado
        401:
          description: Usuário não autorizado
        404:
          description: Produto não encontrado
  
    delete:
      security:
      - auth: []
      summary: Deleta o produto
      responses:
        200:
          description: Produto deletado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        401:
          description: Usuário não autorizado
        404:
          description: Produto não encontrado
          
          
          
          
  /api/products/listByPrice:
    parameters:
    - name: max
      in: query
      schema:
        type: number
      required: true
    - name: min
      in: query
      schema:
        type: number
      required: true   
    get:
      summary: Encontra todos os produtos na faixa min - max
      responses:
        200:
          description: Produtos encontrados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: Produtos não encontrados
          
  /api/products/listByCategory:
    parameters:
    - name: category
      in: query
      schema:
        type: string
      required: true
    get:
      summary: Encontra todos os produtos de determinada categoria
      responses:
        200:
          description: Produtos dessa categoria foram econtrados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: Produtos dessa categoria não encontrados

  /api/products/listByStock:
    parameters:
    - name: stock
      in: query
      schema:
        type: number
      required: true
    get:
      summary: Encontra todos os produtos de estoque maior que estoque
      responses:
        200:
          description: Produtos foram econtrados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: Produtos não encontrados
          
       
components:
  schemas:
    categorie:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        status:
          type: string
    categories:
        type: array
        items:
          $ref: "#/components/schemas/categorie"
    product:
      type: object
      properties:
        idProduto:
          type: string
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        precoUnitario:
          type: string
        qtdEstoque:
          type: integer
        idCategoria: 
          type: string
    products:
      type: array
      items:
        $ref: "#/components/schemas/product"

  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
         